[tool.poetry]
name = "pydigest-classifier"
version = "0.1.0"
description = ""
authors = [
    "Andrey Kiselev <kiselev1189@gmail.com>",
    "Aleksandr Sapronov <a@sapronov.me>",
]
package-mode = false
readme = "README.md"
packages = [
    { include = ".", from = "." },
    { include = "src", from = "src" },
]


[tool.poetry.dependencies]
python = ">=3.12,<4.0"
scikit-learn = ">=1.6.0"
stop-words = ">=2018.7.23"
flask = ">=3.1.0"
beautifulsoup4 = ">=4.12.3"
scipy = ">=1.15.0"
seaborn = ">=0.13.2"
nltk = ">=3.9.1"
langid = ">=1.1.6"
numpy = "^2.2.1"
validators = "^0.34.0"
gunicorn = "^23.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.0"
poetry-plugin-up = "^0.8.0"
pre-commit = "^4.0.1"
pytest = "^8.3.4"
pytest-sugar = "^1.0.0"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 119
indent-width = 4

# Assume Python 3.8
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py",
]
